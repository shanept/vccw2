---

- name: Include OS-dependent variables
  include_vars:
    file: "{{ item }}"
  with_first_found:
    - files:
      - "{{ ansible_facts.distribution }}_{{ ansible_facts.distribution_major_version }}.yml"
      - "{{ ansible_facts.distribution }}.yml"
      - "{{ ansible_facts.os_family }}_{{ ansible_facts.distribution_major_version }}.yml"
      - "{{ ansible_facts.os_family }}.yml"
      skip: true
  tags: always

- name: Include OS-dependent tasks
  include_tasks:
    file: "{{ item }}"
  with_first_found:
    - files:
      - "os/{{ ansible_facts.distribution }}_{{ ansible_facts.distribution_major_version }}.yml"
      - "os/{{ ansible_facts.distribution }}.yml"
      - "os/{{ ansible_facts.os_family }}_{{ ansible_facts.distribution_major_version }}.yml"
      - "os/{{ ansible_facts.os_family }}.yml"
      skip: true
  tags: always

# Install PHP
- name: Download PHP
  become: yes
  action: >
    {{ ansible_pkg_mgr }} name={{ item }} state=present update_cache=yes
  ignore_errors: true
  with_items: "{{ php_packages }}"

- name: Start PHP-FPM service
  become: yes
  service:
    name: "{{ php_service_name | mandatory }}"
    enabled: true
    state: started

# copy php-fpm.conf to apache configuration directory
- name: Enable PHP-FPM in apache2
  become: yes
  template:
    src: templates/apache-php-fpm.conf
    dest: "{{ apache_configs_dir }}/php-fpm.conf"
  notify:
   - restart apache

# php config.
- name: Update php.ini
  become: yes
  lineinfile:
    dest: "{{ php_ini }}"
    create: yes
    line: "{{ item.key }} = {{ item.value }}"
  with_dict: "{{ vccw.php_ini }}"
  notify:
    - restart apache

- name: Update php.ini for cli
  become: yes
  lineinfile:
    dest: "{{ php_ini_cli }}"
    create: yes
    line: "{{ item.key }} = {{ item.value }}"
  with_dict: "{{ vccw.php_ini }}"
  when: php_ini != php_ini_cli

- name: "Update PHP-FPM with apache user"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_conf }}"
    backrefs: yes
    regexp: '^(;\s*)?{{ item }}\s*='
    line: '{{ item }} = {{ ansible_env.USER }}'
  with_items:
    - "user"
    - "group"
    - "listen.owner"
    - "listen.group"
  notify:
    - restart php-fpm

- name: "Update PHP socket file location"
  become: yes
  lineinfile:
    dest: "{{ php_fpm_conf }}"
    backrefs: yes
    regexp: '^(;]s*)?listen\s*='
    line: 'listen = {{ php_fpm_socket_path }}'
  notify:
    - restart php-fpm

- import_tasks: composer.yml
